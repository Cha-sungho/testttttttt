/*
 * bsp_io.c
 *
 *  Created on: Nov 18, 2021
 *      Author: JOO
 */

#include "f28x_project.h"
#include "driverlib.h"
#include "device.h"

#include "bsp_io.h"

#include "app_settings.h"

static void bsp_ConfigIO(void);

static void bsp_ConfigIO(void)
{
    // DSP Status LED
    drv_ConfigGPIO(GPIO_CORE_CPU1, DSP_STATUS_LED1_OPIN, GPIO_DIR_MODE_OUT, GPIO_49_GPIO49, GPIO_PIN_TYPE_STD, GPIO_QUAL_SYNC, 1);
    drv_ConfigGPIO(GPIO_CORE_CPU1, DSP_STATUS_LED2_OPIN, GPIO_DIR_MODE_OUT, GPIO_55_GPIO55, GPIO_PIN_TYPE_STD, GPIO_QUAL_SYNC, 1);
    drv_ConfigGPIO(GPIO_CORE_CPU2, DSP_STATUS_LED3_OPIN, GPIO_DIR_MODE_OUT, GPIO_42_GPIO42, GPIO_PIN_TYPE_STD, GPIO_QUAL_SYNC, 1);
    drv_ConfigGPIO(GPIO_CORE_CPU2, DSP_STATUS_LED4_OPIN, GPIO_DIR_MODE_OUT, GPIO_43_GPIO43, GPIO_PIN_TYPE_STD, GPIO_QUAL_SYNC, 1);

    // Charger Status LED
    drv_ConfigGPIO(GPIO_CORE_CPU1, DSP_384V_LED_OPIN, GPIO_DIR_MODE_OUT, GPIO_61_GPIO61, GPIO_PIN_TYPE_STD, GPIO_QUAL_SYNC, 1);
    drv_ConfigGPIO(GPIO_CORE_CPU1, DSP_FAULT_LED_OPIN, GPIO_DIR_MODE_OUT, GPIO_64_GPIO64, GPIO_PIN_TYPE_STD, GPIO_QUAL_SYNC, 1);
    drv_ConfigGPIO(GPIO_CORE_CPU1, DSP_RUN_LED_OPIN, GPIO_DIR_MODE_OUT, GPIO_67_GPIO67, GPIO_PIN_TYPE_STD, GPIO_QUAL_SYNC, 1);

    // I/O
    drv_ConfigGPIO(GPIO_CORE_CPU1, INPUT_EN_OPIN, GPIO_DIR_MODE_OUT, GPIO_24_GPIO24, GPIO_PIN_TYPE_STD, GPIO_QUAL_SYNC, 1);
    drv_ConfigGPIO(GPIO_CORE_CPU1, OUT_EN_OPIN, GPIO_DIR_MODE_OUT, GPIO_25_GPIO25, GPIO_PIN_TYPE_STD, GPIO_QUAL_SYNC, 1);
    drv_ConfigGPIO(GPIO_CORE_CPU1, CONV_EN_OPIN, GPIO_DIR_MODE_OUT, GPIO_90_GPIO90, GPIO_PIN_TYPE_STD, GPIO_QUAL_SYNC, 1);
    drv_ConfigGPIO(GPIO_CORE_CPU1, VBAT_SENSE_OPIN, GPIO_DIR_MODE_OUT, GPIO_66_GPIO66, GPIO_PIN_TYPE_STD, GPIO_QUAL_SYNC, 1);
    drv_ConfigGPIO(GPIO_CORE_CPU1, INPUT_PRE_CHARGE_EN_OPIN, GPIO_DIR_MODE_OUT, GPIO_133_GPIO133, GPIO_PIN_TYPE_STD, GPIO_QUAL_SYNC, 1);

    drv_ConfigGPIO(GPIO_CORE_CPU1, DSP_DOUT_OPIN, GPIO_DIR_MODE_OUT, GPIO_41_GPIO41, GPIO_PIN_TYPE_STD, GPIO_QUAL_SYNC, 1);

    drv_ConfigGPIO(GPIO_CORE_CPU1, DSP_DIN1_IPIN, GPIO_DIR_MODE_IN, GPIO_38_GPIO38, GPIO_PIN_TYPE_STD, GPIO_QUAL_SYNC, 1);
    drv_ConfigGPIO(GPIO_CORE_CPU1, DSP_DIN2_IPIN, GPIO_DIR_MODE_IN, GPIO_39_GPIO39, GPIO_PIN_TYPE_STD, GPIO_QUAL_SYNC, 1);

    // CH NUM MUX
#if(DEBUGGING == 2)
    drv_ConfigGPIO(GPIO_CORE_CPU1, CH_MUX1_IPIN, GPIO_DIR_MODE_OUT, GPIO_46_GPIO46, GPIO_PIN_TYPE_STD, GPIO_QUAL_SYNC, 1);
    drv_ConfigGPIO(GPIO_CORE_CPU2, CH_MUX2_IPIN, GPIO_DIR_MODE_OUT, GPIO_52_GPIO52, GPIO_PIN_TYPE_STD, GPIO_QUAL_SYNC, 1);
#else
    drv_ConfigGPIO(GPIO_CORE_CPU1, CH_MUX1_IPIN, GPIO_DIR_MODE_IN, GPIO_46_GPIO46, GPIO_PIN_TYPE_STD, GPIO_QUAL_SYNC, 1);
    drv_ConfigGPIO(GPIO_CORE_CPU2, CH_MUX2_IPIN, GPIO_DIR_MODE_IN, GPIO_52_GPIO52, GPIO_PIN_TYPE_STD, GPIO_QUAL_SYNC, 1);
#endif
    drv_ConfigGPIO(GPIO_CORE_CPU1, CH_MUX3_IPIN, GPIO_DIR_MODE_IN, GPIO_44_GPIO44, GPIO_PIN_TYPE_STD, GPIO_QUAL_SYNC, 1);
    drv_ConfigGPIO(GPIO_CORE_CPU1, CH_MUX4_IPIN, GPIO_DIR_MODE_IN, GPIO_47_GPIO47, GPIO_PIN_TYPE_STD, GPIO_QUAL_SYNC, 1);

    // Fault
    drv_ConfigGPIO(GPIO_CORE_CPU1, OUT_FUSE_IPIN, GPIO_DIR_MODE_IN, GPIO_50_GPIO50, GPIO_PIN_TYPE_STD, GPIO_QUAL_3SAMPLE, 1);
    drv_ConfigGPIO(GPIO_CORE_CPU1, EMO_IPIN, GPIO_DIR_MODE_IN, GPIO_118_GPIO118, GPIO_PIN_TYPE_STD, GPIO_QUAL_3SAMPLE, 1);

    // SCI MUX
    drv_ConfigGPIO(GPIO_CORE_CPU1, SCI_MUX_OPIN, GPIO_DIR_MODE_OUT, GPIO_30_GPIO30, GPIO_PIN_TYPE_STD, GPIO_QUAL_SYNC, 1);

    //ADC RANGE
    drv_ConfigGPIO(GPIO_CORE_CPU1, ADC_RANGE, GPIO_DIR_MODE_OUT, GPIO_40_GPIO40, GPIO_PIN_TYPE_STD, GPIO_QUAL_SYNC, 1);
}

Uint16 bsp_InitIO(Uint16* board_channel, Uint16* board_group)
{

    bsp_ConfigIO();

    bsp_IoOnDspLED1(0);
    bsp_IoOnDspLED2(0);
    bsp_IoRunDspLED1();
    bsp_IoRunDspLED2();
    bsp_IoRunDspLED3();
    bsp_IoRunDspLED4();
    bsp_IoOn384VLED(0);
    bsp_IoFaultLED(0);
//    bsp_IoRunLED(0);
    bsp_IoEnableInput(0);       // Primary MOSFET Off
    bsp_sec_mosfet(0);         // Secondary MOSFET Off
    bsp_IoEnableConv(0);        // Vicor Converter(BCM6123) Disable
    bsp_IoEnableBattSen(0);     // Battery Sensing Relay Off
    bsp_IoEnablePreCharge(0);   // Precharge Relay Off
    bsp_IoDout(0);

#if(DEBUGGING != 2)
    *board_channel=bsp_IoChMux1()|bsp_IoChMux2()<<1;
#else
    *board_channel = 0;
#endif
    *board_group=bsp_IoChMux3()|bsp_IoChMux4()<<1;

    bsp_IoSICMux(0);

#ifdef CPU2
    bsp_IoOnDspLED3(0);
    bsp_IoOnDspLED4(0);
#endif
}
